Parameters:
  messVoiceVidAZ:
    Type: String
    Default: eu-west-2a
    Description: The AZ used for your Messaging and VoiceVideo instances.
  complianceAZ:
    Type: String
    Default: eu-west-2b
    Description: The AZ used for your Compliance instance.
  sshIp:
    Type: String
    Description: The IP that you will adminster the instances from via SSH.
  keyPair:
    Type: String
    Description: The keypair that you will use for SSH into your instances.
  EBSsize:
    Type: Number
    Default: 120
    Description: The size in GB of the instances (120G minimum required).
  SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/Resource
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Ref: messVoiceVidAZ
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WickrEntCdk/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet1/Subnet
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet1/RouteTable
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet1/RouteTableAssociation
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet1/DefaultRoute
  VPCPublicSubnet1EIP6AD938E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet1/EIP
  VPCPublicSubnet1NATGatewayE0556630:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet1EIP6AD938E8
          - AllocationId
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet1/NATGateway
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Ref: complianceAZ
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: WickrEntCdk/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet2/Subnet
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet2/RouteTable
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet2/RouteTableAssociation
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet2/DefaultRoute
  VPCPublicSubnet2EIP4947BC00:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet2/EIP
  VPCPublicSubnet2NATGateway3C070193:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet2EIP4947BC00
          - AllocationId
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PublicSubnet2/NATGateway
  VPCPrivateSubnet1Subnet8BCA10E0:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Ref: messVoiceVidAZ
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WickrEntCdk/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PrivateSubnet1/Subnet
  VPCPrivateSubnet1RouteTableBE8A6027:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PrivateSubnet1/RouteTable
  VPCPrivateSubnet1RouteTableAssociation347902D1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PrivateSubnet1/RouteTableAssociation
  VPCPrivateSubnet1DefaultRouteAE1D6490:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PrivateSubnet1/DefaultRoute
  VPCPrivateSubnet2SubnetCFCDAA7A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Ref: complianceAZ
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: WickrEntCdk/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PrivateSubnet2/Subnet
  VPCPrivateSubnet2RouteTable0A19E10E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PrivateSubnet2/RouteTable
  VPCPrivateSubnet2RouteTableAssociation0C73D413:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PrivateSubnet2/RouteTableAssociation
  VPCPrivateSubnet2DefaultRouteF4F5CFD2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet2NATGateway3C070193
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/PrivateSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WickrEntCdk/VPC
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: WickrEntCdk/VPC/VPCGW
  ec2Role38AB65C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSSMManagedInstanceCore
    Metadata:
      aws:cdk:path: WickrEntCdk/ec2Role/Resource
  ComplianceSecurityGroup10FDE0F7:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ingress rules required for Wickr Compliance Server
      GroupName: Compliance Ingress
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: WickrEntCdk/Compliance Security Group/Resource
  MessagingSecurityGroup50923318:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ingress rules required for Wickr Messaging Server
      GroupName: Messaging Ingress
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: SSH Access
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp:
            Ref: sshIp
          Description: Installer UI Admin Console
          FromPort: 8800
          IpProtocol: tcp
          ToPort: 8800
        - CidrIp: 0.0.0.0/0
          Description: Client
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: WickrEntCdk/Messaging Security Group/Resource
  MessagingSecurityGroupfromWickrEntCdkVoiceandVideoSecurityGroupFF0E5A6198709881281F10CE:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Voice and Video
      FromPort: 9870
      GroupId:
        Fn::GetAtt:
          - MessagingSecurityGroup50923318
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - VoiceandVideoSecurityGroup9757B1D6
          - GroupId
      ToPort: 9881
    Metadata:
      aws:cdk:path: WickrEntCdk/Messaging Security Group/from WickrEntCdkVoiceandVideoSecurityGroupFF0E5A61:9870-9881
  MessagingSecurityGroupfromWickrEntCdkComplianceSecurityGroupC7600CF144361C8227A:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Compliance Server
      FromPort: 443
      GroupId:
        Fn::GetAtt:
          - MessagingSecurityGroup50923318
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ComplianceSecurityGroup10FDE0F7
          - GroupId
      ToPort: 443
    Metadata:
      aws:cdk:path: WickrEntCdk/Messaging Security Group/from WickrEntCdkComplianceSecurityGroupC7600CF1:443
  VoiceandVideoSecurityGroup9757B1D6:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Ingress rules required for Wickr Voice and Video Server
      GroupName: Voice and Video Ingress
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Ref: sshIp
          Description: Allow SSH Access
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          Description: Audio and Video
          FromPort: 16384
          IpProtocol: udp
          ToPort: 17384
        - CidrIp: 0.0.0.0/0
          Description: SOCKS Proxy
          FromPort: 8001
          IpProtocol: tcp
          ToPort: 8001
        - CidrIp: 0.0.0.0/0
          Description: TCP Proxy
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: WickrEntCdk/Voice and Video Security Group/Resource
  VoiceandVideoSecurityGroupfromWickrEntCdkMessagingSecurityGroup291D5D8544483958E05:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Messaging Server
      FromPort: 444
      GroupId:
        Fn::GetAtt:
          - VoiceandVideoSecurityGroup9757B1D6
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - MessagingSecurityGroup50923318
          - GroupId
      ToPort: 444
    Metadata:
      aws:cdk:path: WickrEntCdk/Voice and Video Security Group/from WickrEntCdkMessagingSecurityGroup291D5D85:444
  MessagingEIP:
    Type: AWS::EC2::EIP
    Metadata:
      aws:cdk:path: WickrEntCdk/Messaging EIP
  VoiceViceoEIP:
    Type: AWS::EC2::EIP
    Metadata:
      aws:cdk:path: WickrEntCdk/VoiceViceo EIP
  ComplianceInstanceProfile44067C82:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ec2Role38AB65C0
    Metadata:
      aws:cdk:path: WickrEntCdk/Compliance/InstanceProfile
  Compliance9ACA30CD:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Ref: complianceAZ
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: true
            VolumeSize: 20
        - DeviceName: /dev/xvdb
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize:
              Ref: EBSsize
      IamInstanceProfile:
        Ref: ComplianceInstanceProfile44067C82
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.large
      KeyName:
        Ref: keyPair
      SecurityGroupIds:
        - Fn::GetAtt:
            - ComplianceSecurityGroup10FDE0F7
            - GroupId
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
      Tags:
        - Key: Name
          Value: WickrEntCdk/Compliance
      UserData:
        Fn::Base64: |-
          #!/bin/bash
          sudo su ec2-user
          sudo yum update -y
          sudo amazon-linux-extras install docker
          sudo service docker start
          sudo systemctl enable docker
          sudo usermod -a -G docker ec2-user
    DependsOn:
      - ec2Role38AB65C0
    Metadata:
      aws:cdk:path: WickrEntCdk/Compliance/Resource
  MessagingInstanceProfileBCFC16F6:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ec2Role38AB65C0
    Metadata:
      aws:cdk:path: WickrEntCdk/Messaging/InstanceProfile
  Messaging4C94D7F8:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Ref: messVoiceVidAZ
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: true
            VolumeSize: 20
        - DeviceName: /dev/xvdb
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize:
              Ref: EBSsize
      IamInstanceProfile:
        Ref: MessagingInstanceProfileBCFC16F6
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.large
      KeyName:
        Ref: keyPair
      SecurityGroupIds:
        - Fn::GetAtt:
            - MessagingSecurityGroup50923318
            - GroupId
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      Tags:
        - Key: Name
          Value: WickrEntCdk/Messaging
      UserData:
        Fn::Base64: |-
          #!/bin/bash
          sudo su ec2-user
          sudo yum update -y
          sudo amazon-linux-extras install docker
          sudo service docker start
          sudo systemctl enable docker
          sudo usermod -a -G docker ec2-user
    DependsOn:
      - ec2Role38AB65C0
    Metadata:
      aws:cdk:path: WickrEntCdk/Messaging/Resource
  MessagingEc2EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      EIP:
        Ref: MessagingEIP
      InstanceId:
        Ref: Messaging4C94D7F8
    Metadata:
      aws:cdk:path: WickrEntCdk/Messaging Ec2 EIP Association
  VoiceVideoInstanceProfile24DD42C8:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: ec2Role38AB65C0
    Metadata:
      aws:cdk:path: WickrEntCdk/VoiceVideo/InstanceProfile
  VoiceVideoA5D5906A:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone:
        Ref: messVoiceVidAZ
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            Encrypted: true
            VolumeSize: 20
        - DeviceName: /dev/xvdb
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeSize:
              Ref: EBSsize
      IamInstanceProfile:
        Ref: VoiceVideoInstanceProfile24DD42C8
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.large
      KeyName:
        Ref: keyPair
      SecurityGroupIds:
        - Fn::GetAtt:
            - VoiceandVideoSecurityGroup9757B1D6
            - GroupId
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      Tags:
        - Key: Name
          Value: WickrEntCdk/VoiceVideo
      UserData:
        Fn::Base64: |-
          #!/bin/bash
          sudo su ec2-user
          sudo yum update -y
          sudo amazon-linux-extras install docker
          sudo service docker start
          sudo systemctl enable docker
          sudo usermod -a -G docker ec2-user
    DependsOn:
      - ec2Role38AB65C0
    Metadata:
      aws:cdk:path: WickrEntCdk/VoiceVideo/Resource
  VoicevideoEc2EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      EIP:
        Ref: VoiceViceoEIP
      InstanceId:
        Ref: VoiceVideoA5D5906A
    Metadata:
      aws:cdk:path: WickrEntCdk/Voicevideo Ec2 EIP Association
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/32QQW/CMAyFfwv3NFtBGmeEJtTLFrWI6+QGsxnapEocEKr635cudN1pp/fy7NhfspSrtcwXcPOZPl6yhmrZVwz6IrYno8BBi4xOxPpHj3op+0Onx9JBbYUKdUO6CrVBHrPZlTYw7qFucM7nbOO91QRM1vw2j+a1UKO8Ae+A8QZ3oRxdo50HFybSRD81JJLHacMR/KtFw6JCHRzxfeds6H4Y/g0K8+nQe1EYz2A0plWzj2R/oAdB0Mq+tOl5k04XlLMnanAYRIneBpdGvAfuQvqcRzoIY48oz/7pmr/IfCWfF2dPlLlgmFqUZdJvrEXyiaIBAAA=
    Metadata:
      aws:cdk:path: WickrEntCdk/CDKMetadata/Default
Outputs:
  CompliancePrivateIPuseSSMSessionManagerSSMSSHforaccess:
    Value:
      Ref: Compliance9ACA30CD
  MessagingPublicIP:
    Value:
      Fn::GetAtt:
        - Messaging4C94D7F8
        - PublicIp
  VoiceVideoPublicIP:
    Value:
      Fn::GetAtt:
        - VoiceVideoA5D5906A
        - PublicIp
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

